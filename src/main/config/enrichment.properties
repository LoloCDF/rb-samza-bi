# Copyright (c) 2015 ENEO Tecnologia S.L.
# This file is part of redBorder.
# redBorder is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# redBorder is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with redBorder. If not, see <http://www.gnu.org/licenses/>.

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=enrichment

# YARN
yarn.package.path=hdfs://hadoopnamenode.redborder.cluster:8020/var/samza/enrichment.tar.gz
yarn.container.count=2
yarn.queue=samza

# Task
task.class=net.redborder.samza.tasks.EnrichmentStreamTask
task.inputs=kafka.rb_flow,kafka.rb_nmsp,kafka.rb_loc,kafka.rb_monitor,kafka.rb_metrics
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=1

# Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Kafka System
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=json
systems.kafka.consumer.zookeeper.connect=samza01:2181/
systems.kafka.producer.bootstrap.servers=samza01:9092

# Tranquility
systems.druid.samza.factory=com.metamx.tranquility.samza.BeamSystemFactory
systems.druid.beam.factory=net.redborder.samza.tranquility.FlowBeamFactory
systems.druid.beam.batchSize=2000
systems.druid.beam.maxPendingBatches=5

systems.druid_monitor.samza.factory=com.metamx.tranquility.samza.BeamSystemFactory
systems.druid_monitor.beam.factory=net.redborder.samza.tranquility.MonitorBeamFactory
systems.druid_monitor.beam.batchSize=2000
systems.druid_monitor.beam.maxPendingBatches=5

# Metrics
metrics.reporters=snapshot
metrics.reporter.snapshot.class=net.redborder.samza.metrics.MetricsRedBorderFactory
metrics.reporter.snapshot.stream=kafka.rb_metrics

# Stores
stores.nmsp-measure.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.nmsp-measure.changelog=kafka.samza-nmsp-measure-changelog
stores.nmsp-measure.changelog.replication.factor=1
stores.nmsp-measure.key.serde=string
stores.nmsp-measure.msg.serde=json

stores.nmsp-info.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.nmsp-info.changelog=kafka.samza-nmsp-info-changelog
stores.nmsp-info.changelog.replication.factor=1
stores.nmsp-info.key.serde=string
stores.nmsp-info.msg.serde=json

stores.location.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.location.changelog=kafka.samza-location-changelog
stores.location.changelog.replication.factor=1
stores.location.key.serde=string
stores.location.msg.serde=json

# Processors classes
redborder.processors.rb_flow=net.redborder.samza.processors.FlowProcessor
redborder.processors.rb_metrics=net.redborder.samza.processors.MetricsProcessor
redborder.processors.rb_nmsp=net.redborder.samza.processors.NmspProcessor
redborder.processors.rb_loc=net.redborder.samza.processors.LocationV89Processor
redborder.processors.rb_monitor=net.redborder.samza.processors.MonitorProcessor

# Stores declarations
redborder.stores=nmsp-measure,nmsp-info,location

# Stores keys
redborder.store.nmsp-measure.key=client_mac
redborder.store.nmsp-info.key=client_mac
redborder.store.location.key=client_mac

# Enrichment classes
redborder.enrichments.types.mac_vendor=net.redborder.samza.enrichments.MacVendorEnrich

# Enrichments per stream
redborder.enrichments.streams.rb_flow=mac_vendor

# redBorder tranquility configuration
redborder.beam.flow.partitions=2
redborder.beam.flow.replicas=1
redborder.beam.flow.maxrows=300000
redborder.beam.flow.intermediatePersist=PT20m

redborder.beam.monitor.partitions=2
redborder.beam.monitor.replicas=1
redborder.beam.monitor.maxrows=1000000
redborder.beam.monitor.intermediatePersist=PT20m
